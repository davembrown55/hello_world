#!/bin/bash

#Create file. Add tile etc
echo "INPUT-NUMBER" > INPUT-NUMBER1.txt 
echo >> INPUT-NUMBER1.txt 

# Print total lines of DLACS code that contain the string 'INPUT-NUMBER'
echo "Total lines of DLACS code that contain the string 'INPUT-NUMBER': " >> INPUT-NUMBER1.txt 
echo >> INPUT-NUMBER1.txt 
grep -an 'INPUT-NUMBER' ./*/*c?? | wc -l >> INPUT-NUMBER1.txt  
echo >>  INPUT-NUMBER1.txt 

#Count and list of modules that contain the string 'INPUT-NUMBER'. If file of same name has a .cbl
echo "Count of unique modules that contain the string 'INPUT-NUMBER' (eg: if module1.cob and module1.cbl exist, only one will be counted): " >> INPUT-NUMBER1.txt &&
echo >>  INPUT-NUMBER1.txt 

# Create the list of unique modules
echo "Unique file list: " >> INPUT-NUMBER1.txt
declare -A seen

# Debug file to log the process
debug_file="debug_log.txt"
echo "Debug Log:" > "$debug_file"

# Find all files with 3-letter extensions starting with c
file_count=0
for file in $(find . -type f -regex '.*/.*\.[cC]...'); do
	((file_count++))
    echo "Processing file: $file_count: $file" >> "$debug_file"
    filename=$(basename "$file")  # Extracts the filename from the full path
    name="${filename%.*}"         # Extracts the base name (without extension)
    ext="${filename##*.}"         # Extracts the extension
    
    # Handle priority for .cob over .cbl, but include other extensions
    if [[ -z "${seen[$name]}" ]]; then
        seen[$name]="$file"
        echo "Added: $file" >> "$debug_file"
    elif [[ "${ext}" == "cob" && "${seen[$name]}" == *".cbl" ]]; then
        seen[$name]="$file"
        echo "Replaced with .cob: $file" >> "$debug_file"
    elif [[ "${ext}" != "cbl" && "${ext}" != "cob" ]]; then
        seen[$name"_$ext"]="$file"
        echo "Added with other extension: $file" >> "$debug_file"
    fi
	
	# Print progress every 100 files 
    if((file_count % 100 == 0)); then
		echo "Processed $file_count files so far... "
    fi	
	# Print progress every 2 files     
	if((file_count % 2 == 0)); then
		echo "Processed $file_count files so far... "
    fi
done

# Print the contents of the seen array for debugging
echo "Seen array contents:" >> "$debug_file"
for key in "${!seen[@]}"; do
    echo "$key -> ${seen[$key]}" >> "$debug_file"
done

# Print the list of unique files containing 'INPUT-NUMBER'
for file in "${seen[@]}"; do
    if grep -q 'INPUT-NUMBER' "$file"; then
        echo "$file" >> INPUT-NUMBER1.txt
    fi
done

# Count unique entries where 'INPUT-NUMBER' is found
unique_count=$(grep -l 'INPUT-NUMBER' "${seen[@]}" | wc -l)
echo "Unique file Count: " >> INPUT-NUMBER1.txt
echo "$unique_count" >> INPUT-NUMBER1.txt

# Print the debug log for review
cat "$debug_file"
